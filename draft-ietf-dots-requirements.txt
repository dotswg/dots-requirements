



DOTS                                                        A. Mortensen
Internet-Draft                                      Arbor Networks, Inc.
Intended status: Informational                              R. Moskowitz
Expires: September 11, 2017                               HTT Consulting
                                                                T. Reddy
                                                     Cisco Systems, Inc.
                                                          March 10, 2017


Distributed Denial of Service (DDoS) Open Threat Signaling Requirements
                    draft-ietf-dots-requirements-03

Abstract

   This document defines the requirements for the Distributed Denial of
   Service (DDoS) Open Threat Signaling (DOTS) protocols coordinating
   attack response against DDoS attacks.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on September 11, 2017.

Copyright Notice

   Copyright (c) 2017 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of




Mortensen, et al.      Expires September 11, 2017               [Page 1]

Internet-Draft              DOTS Requirements                 March 2017


   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Context and Motivation  . . . . . . . . . . . . . . . . .   2
     1.2.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   3
   2.  Requirements  . . . . . . . . . . . . . . . . . . . . . . . .   5
     2.1.  General Requirements  . . . . . . . . . . . . . . . . . .   7
     2.2.  Operational Requirements  . . . . . . . . . . . . . . . .   8
     2.3.  Data Channel Requirements . . . . . . . . . . . . . . . .  10
     2.4.  Security requirements . . . . . . . . . . . . . . . . . .  11
     2.5.  Data Model Requirements . . . . . . . . . . . . . . . . .  12
   3.  Congestion Control Considerations . . . . . . . . . . . . . .  13
     3.1.  Signal Channel  . . . . . . . . . . . . . . . . . . . . .  13
     3.2.  Data Channel  . . . . . . . . . . . . . . . . . . . . . .  14
   4.  Security Considerations . . . . . . . . . . . . . . . . . . .  14
   5.  Contributors  . . . . . . . . . . . . . . . . . . . . . . . .  14
   6.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .  14
   7.  Change Log  . . . . . . . . . . . . . . . . . . . . . . . . .  15
     7.1.  03 revision . . . . . . . . . . . . . . . . . . . . . . .  15
     7.2.  02 revision . . . . . . . . . . . . . . . . . . . . . . .  15
     7.3.  01 revision . . . . . . . . . . . . . . . . . . . . . . .  15
     7.4.  00 revision . . . . . . . . . . . . . . . . . . . . . . .  16
     7.5.  Initial revision  . . . . . . . . . . . . . . . . . . . .  16
   8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  16
     8.1.  Normative References  . . . . . . . . . . . . . . . . . .  16
     8.2.  Informative References  . . . . . . . . . . . . . . . . .  17
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  18

1.  Introduction

1.1.  Context and Motivation

   Distributed Denial of Service (DDoS) attacks continue to plague
   networks around the globe, from Tier-1 service providers on down to
   enterprises and small businesses.  Attack scale and frequency
   similarly have continued to increase, in part as a result of software
   vulnerabilities leading to reflection and amplification attacks.
   Once staggering attack traffic volume is now the norm, and the impact
   of larger-scale attacks attract the attention of international press
   agencies.

   The greater impact of contemporary DDoS attacks has led to increased
   focus on coordinated attack response.  Many institutions and
   enterprises lack the resources or expertise to operate on-premise
   attack mitigation solutions themselves, or simply find themselves



Mortensen, et al.      Expires September 11, 2017               [Page 2]

Internet-Draft              DOTS Requirements                 March 2017


   constrained by local bandwidth limitations.  To address such gaps,
   security service providers have begun to offer on-demand traffic
   scrubbing services, which aim to separate the DDoS traffic from
   legitimate traffic and forward only the latter.  Today each such
   service offers its own interface for subscribers to request attack
   mitigation, tying subscribers to proprietary implementations while
   also limiting the subset of network elements capable of participating
   in the attack response.  As a result of incompatibility across
   services, attack responses may be fragmentary or otherwise
   incomplete, leaving key players in the attack path unable to assist
   in the defense.

   The lack of a common method to coordinate a real-time response among
   involved actors and network domains inhibits the speed and
   effectiveness of DDoS attack mitigation.  This document describes the
   required characteristics of a DOTS protocol enabling requests for
   DDoS attack mitigation, reducing attack impact and leading to more
   efficient defensive strategies.

   DOTS communicates the need for defensive action in anticipation of or
   in response to an attack, but does not dictate the form any defensive
   action takes.  DOTS supplements calls for help with pertinent details
   about the detected attack, allowing entities participating in DOTS to
   form ad hoc, adaptive alliances against DDoS attacks as described in
   the DOTS use cases [I-D.ietf-dots-use-cases].  The requirements in
   this document are derived from those use cases and
   [I-D.ietf-dots-architecture].

1.2.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

   This document adopts the following terms:

   DDoS:  A distributed denial-of-service attack, in which traffic
      originating from multiple sources are directed at a target on a
      network.  DDoS attacks are intended to cause a negative impact on
      the availability of servers, services, applications, and/or other
      functionality of an attack target.  Denial-of-service
      considerations are discussed in detail in [RFC4732].

   DDoS attack target:  A network connected entity with a finite set of
      resources, such as network bandwidth, memory or CPU, that is the
      focus of a DDoS attack.  Potential targets include network
      elements, servers, and services.




Mortensen, et al.      Expires September 11, 2017               [Page 3]

Internet-Draft              DOTS Requirements                 March 2017


   DDoS attack telemetry:  Collected behavioral characteristics defining
      the nature of a DDoS attack.

   Countermeasure:  An action or set of actions taken to recognize and
      filter out DDoS attack traffic while passing legitimate traffic to
      the attack target.

   Mitigation:  A set of countermeasures enforced against traffic
      destined for the target or targets of a detected or reported DDoS
      attack, where countermeasure enforcement is managed by an entity
      in the network path between attack sources and the attack target.
      Mitigation methodology is out of scope for this document.

   Mitigator:  An entity, typically a network element, capable of
      performing mitigation of a detected or reported DDoS attack.  For
      the purposes of this document, this entity is a black box capable
      of mitigation, making no assumptions about availability or design
      of countermeasures, nor about the programmable interface between
      this entity and other network elements.  The mitigator and DOTS
      server are assumed to belong to the same administrative entity.

   DOTS client:  A DOTS-aware software module responsible for requesting
      attack response coordination with other DOTS-aware elements.

   DOTS server:  A DOTS-aware software module handling and responding to
      messages from DOTS clients.  The DOTS server SHOULD enable
      mitigation on behalf of the DOTS client, if requested, by
      communicating the DOTS client's request to the mitigator and
      returning selected mitigator feedback to the requesting DOTS
      client.  A DOTS server MAY also be a mitigator.

   DOTS agent:  Any DOTS-aware software module capable of participating
      in a DOTS signaling session.

   DOTS gateway:  A logical DOTS agent resulting from the logical
      concatenation of a DOTS server and a DOTS client, analogous to a
      SIP Back-to-Back User Agent (B2BUA) [RFC3261].  DOTS gateways are
      discussed in detail in [I-D.ietf-dots-architecture].

   Signal channel:  A bidirectional, mutually authenticated
      communication channel between DOTS agents characterized by
      resilience even in conditions leading to severe packet loss, such
      as a volumetric DDoS attack causing network congestion.

   DOTS signal:  A concise authenticated status/control message
      transmitted between DOTS agents, used to indicate client's need
      for mitigation, as well as to convey the status of any requested
      mitigation.



Mortensen, et al.      Expires September 11, 2017               [Page 4]

Internet-Draft              DOTS Requirements                 March 2017


   Heartbeat:  A message transmitted between DOTS agents over the signal
      channel, used as a keep-alive and to measure peer health.

   Client signal:  A message sent from a DOTS client to a DOTS server
      over the signal channel, indicating the DOTS client's need for
      mitigation, as well as the scope of any requested mitigation,
      optionally including additional attack details to supplement
      server-initiated mitigation.

   Server signal:  A message sent from a DOTS server to a DOTS client
      over the signal channel.  Note that a server signal is not a
      response to client signal, but a DOTS server-initiated status
      message sent to DOTS clients with which the server has established
      signaling sessions.

   Data channel:  A secure communication layer between DOTS clients and
      DOTS servers used for infrequent bulk exchange of data not easily
      or appropriately communicated through the signal channel under
      attack conditions.

   Filter:  A policy matching a network traffic flow or set of flows and
      rate-limiting or discarding matching traffic.

   Blacklist:  A filter list of addresses, prefixes and/or other
      identifiers indicating sources from which traffic should be
      blocked, regardless of traffic content.

   Whitelist:  A list of addresses, prefixes and/or other identifiers
      from indicating sources from which traffic should always be
      allowed, regardless of contradictory data gleaned in a detected
      attack.

   Multi-homed DOTS client:  A DOTS client exchanging messages with
      multiple DOTS servers, each in a separate administrative domain.

2.  Requirements

   This section describes the required features and characteristics of
   the DOTS protocol.

   DOTS is an advisory protocol.  An active DDoS attack against the
   entity controlling the DOTS client need not be present before
   establishing DOTS communication between DOTS agents.  Indeed,
   establishing a relationship with peer DOTS agents during normal
   network conditions provides the foundation for more rapid attack
   response against future attacks, as all interactions setting up DOTS,
   including any business or service level agreements, are already
   complete.



Mortensen, et al.      Expires September 11, 2017               [Page 5]

Internet-Draft              DOTS Requirements                 March 2017


   DOTS must at a minimum make it possible for a DOTS client to request
   a DOTS server's aid in mounting a coordinated defense against a
   suspected attack, signaling within or between domains as requested by
   local operators.  DOTS clients should similarly be able to withdraw
   aid requests.  DOTS requires no justification from DOTS clients for
   requests for help, nor do DOTS clients need to justify withdrawing
   help requests: the decision is local to the DOTS clients' domain.
   Regular feedback between DOTS clients and DOTS server supplement the
   defensive alliance by maintaining a common understanding of DOTS peer
   health and activity.  Bidirectional communication between DOTS
   clients and DOTS servers is therefore critical.

   Yet DOTS must also work with a set of competing operational goals.
   On the one hand, the protocol must be resilient under extremely
   hostile network conditions, providing continued contact between DOTS
   agents even as attack traffic saturates the link.  Such resiliency
   may be developed several ways, but characteristics such as small
   message size, asynchronous, redundant message delivery and minimal
   connection overhead (when possible given local network policy) will
   tend to contribute to the robustness demanded by a viable DOTS
   protocol.  Operators of peer DOTS-enabled domains may enable quality-
   or class-of-service traffic tagging to increase the probability of
   successful DOTS signal delivery, but DOTS requires no such policies
   be in place.  The DOTS solution indeed must be viable especially in
   their absence.

   On the other hand, DOTS must include protections ensuring message
   confidentiality, integrity and authenticity to keep the protocol from
   becoming another vector for the very attacks it's meant to help fight
   off.  DOTS clients must be able to authenticate DOTS servers, and
   vice versa, for DOTS to operate safely, meaning the DOTS agents must
   have a way to negotiate and agree upon the terms of protocol
   security.  Attacks against the transport protocol should not offer a
   means of attack against the message confidentiality, integrity and
   authenticity.

   The DOTS server and client must also have some common method of
   defining the scope of any mitigation performed by the mitigator, as
   well as making adjustments to other commonly configurable features,
   such as listen ports, exchanging black- and white-lists, and so on.

   Finally, DOTS should provide sufficient extensibility to meet local,
   vendor or future needs in coordinated attack defense, although this
   consideration is necessarily superseded by the other operational
   requirements.






Mortensen, et al.      Expires September 11, 2017               [Page 6]

Internet-Draft              DOTS Requirements                 March 2017


2.1.  General Requirements

   GEN-001  Extensibility: Protocols and data models developed as part
      of DOTS MUST be extensible in order to keep DOTS adaptable to
      operational and proprietary DDoS defenses.  Future extensions MUST
      be backward compatible.

   GEN-002  Resilience and Robustness: The signaling protocol MUST be
      designed to maximize the probability of signal delivery even under
      the severely constrained network conditions imposed by particular
      attack traffic.  The protocol MUST be resilient, that is, continue
      operating despite message loss and out-of-order or redundant
      message delivery.

   GEN-003  Bidirectionality: To support peer health detection, to
      maintain an open signal channel, and to increase the probability
      of signal delivery during attack, the signal channel MUST be
      bidirectional, with client and server transmitting signals to each
      other at regular intervals, regardless of any client request for
      mitigation.  Unidirectional messages MUST be supported within the
      bidirectional signal channel to allow for unsolicited message
      delivery, enabling asynchronous notifications between agents.

   GEN-004  Sub-MTU Message Size: To avoid message fragmentation and the
      consequently decreased probability of message delivery, signaling
      protocol message size MUST be kept under signaling Path Maximum
      Transmission Unit (PMTU), including the byte overhead of any
      encapsulation, transport headers, and transport- or message-level
      security.

      DOTS agents SHOULD attempt to learn the PMTU through mechanisms
      such as Path MTU Discovery [RFC1191] or Packetization Layer Path
      MTU Discovery [RFC4821].  If the PMTU cannot be discovered, DOTS
      agents SHOULD assume a PMTU of 1280 bytes.  If IPv4 support on
      legacy or otherwise unusual networks is a consideration and PMTU
      is unknown, DOTS implementations MAY rely on a PMTU of 576 bytes,
      as discussed in [RFC0791] and [RFC1122].

   GEN-005  Bulk Data Exchange: Infrequent bulk data exchange between
      DOTS agents can also significantly augment attack response
      coordination, permitting such tasks as population of black- or
      white-listed source addresses; address or prefix group aliasing;
      exchange of incident reports; and other hinting or configuration
      supplementing attack response.

      As the resilience requirements for the DOTS signal channel mandate
      small signal message size, a separate, secure data channel




Mortensen, et al.      Expires September 11, 2017               [Page 7]

Internet-Draft              DOTS Requirements                 March 2017


      utilizing a reliable transport protocol MUST be used for bulk data
      exchange.

2.2.  Operational Requirements

   OP-001  Use of Common Transport Protocols: DOTS MUST operate over
      common widely deployed and standardized transport protocols.
      While the User Datagram Protocol (UDP) [RFC0768] SHOULD be used
      for the signal channel, the Transmission Control Protocol (TCP)
      [RFC0793] MAY be used if necessary due to network policy or
      middlebox capabilities or configurations.  The data channel MUST
      use a reliable transport; see Section 2.3 below.

   OP-002  Session Health Monitoring: Peer DOTS agents MUST regularly
      send heartbeats to each other after mutual authentication in order
      to keep the DOTS session active.  A session MUST be considered
      active until a DOTS agent explicitly ends the session, or either
      DOTS agent fails to receive heartbeats from the other after a
      mutually agreed upon timeout period has elapsed.

   OP-003  Session Redirection: In order to increase DOTS operational
      flexibility and scalability, DOTS servers SHOULD be able to
      redirect DOTS clients to another DOTS server at any time.  Due to
      the decreased probability of DOTS server signal delivery due to
      link congestion, it is RECOMMENDED DOTS servers avoid redirecting
      while mitigation is enabled during an active attack against a
      target in the DOTS client's domain.  Either the DOTS servers have
      to fate-share the security state, the client MUST have separate
      security state with each potential redirectable server, or be able
      to negotiate new state as part of redirection.

   OP-004  Mitigation Status: DOTS MUST provide a means to report the
      status of an action requested by a DOTS client.  In particular,
      DOTS clients MUST be able to request or withdraw a request for
      mitigation from the DOTS server.  The DOTS server MUST acknowledge
      a DOTS client's request to withdraw from coordinated attack
      response in subsequent signals, and MUST cease mitigation activity
      as quickly as possible.  However, a DOTS client rapidly toggling
      active mitigation may result in undesirable side-effects for the
      network path, such as route or DNS [RFC1034] flapping.  A DOTS
      server therefore MAY continue mitigating for a mutually negotiated
      period after receiving the DOTS client's request to stop.

      A server MAY refuse to engage in coordinated attack response with
      a client.  To make the status of a client's request clear, the
      server MUST indicate in server signals whether client-initiated
      mitigation is active.  When a client-initiated mitigation is
      active, and threat handling details such as mitigation scope and



Mortensen, et al.      Expires September 11, 2017               [Page 8]

Internet-Draft              DOTS Requirements                 March 2017


      statistics are available to the server, the server SHOULD include
      those details in server signals sent to the client.  DOTS clients
      SHOULD take mitigation statistics into account when deciding
      whether to request the DOTS server cease mitigation.

   OP-005  Mitigation Lifetime: A DOTS client SHOULD indicate the
      desired lifetime of any mitigation requested from the DOTS server.
      As DDoS attack duration is unpredictable, the DOTS client SHOULD
      be able to extend mitigation lifetime with periodic renewed
      requests for help.  When the mitigation lifetime comes to an end,
      the DOTS server SHOULD delay session termination for a protocol-
      defined grace period to allow for delivery of delayed mitigation
      renewals over the signal channel.  After the grace period elapses,
      the DOTS server MAY terminate the session at any time.

      If a DOTS client does not include a mitigation lifetime in
      requests for help sent to the DOTS server, the DOTS server will
      use a reasonable default as defined by the protocol.  As above,
      the DOTS client MAY extend a current mitigation request's lifetime
      trivially with renewed requests for help.

      A DOTS client MAY also request an indefinite mitigation lifetime,
      enabling architectures in which the mitigator is always in the
      traffic path to the resources for which the DOTS client is
      requesting protection.  DOTS servers MAY refuse such requests for
      any reason.  The reasons themselves are not in scope.

   OP-006  Mitigation Scope: DOTS clients MUST indicate the desired
      scope of any mitigation, for example by using Classless Internet
      Domain Routing (CIDR) [RFC1518],[RFC1519] prefixes, [RFC2373] for
      IPv6 [RFC2460] prefixes, the length/prefix convention established
      in the Border Gateway Protocol (BGP) [RFC4271], SIP URIs
      [RFC3261], E.164 numbers, DNS names, or by a resource group alias
      agreed upon with the server through the data channel.

      If there is additional information available narrowing the scope
      of any requested attack response, such as targeted port range,
      protocol, or service, DOTS clients SHOULD include that information
      in client signals.  DOTS clients MAY also include additional
      attack details.  Such supplemental information is OPTIONAL, and
      DOTS servers MAY ignore it when enabling countermeasures on the
      mitigator.

      As an active attack evolves, clients MUST be able to adjust as
      necessary the scope of requested mitigation by refining the scope
      of resources requiring mitigation.





Mortensen, et al.      Expires September 11, 2017               [Page 9]

Internet-Draft              DOTS Requirements                 March 2017


   OP-007  Mitigation Efficacy: When a mitigation request by a DOTS
      client is active, DOTS clients SHOULD transmit a metric of
      perceived mitigation efficacy to the DOTS server, per "Automatic
      or Operator-Assisted CPE or PE Mitigators Request Upstream DDoS
      Mitigation Services" in [I-D.ietf-dots-use-cases].  DOTS servers
      MAY use the efficacy metric to adjust countermeasures activated on
      a mitigator on behalf of a DOTS client.

   OP-008  Conflict Detection and Notification: Multiple DOTS clients
      controlled by a single administrative entity may send conflicting
      mitigation requests for pool of protected resources , as a result
      of misconfiguration, operator error, or compromised DOTS clients.
      DOTS servers attempting to honor conflicting requests may flap
      network route or DNS information, degrading the networks
      attempting to participate in attack response with the DOTS
      clients.  DOTS servers SHALL detect such conflicting requests, and
      SHALL notify the DOTS clients in conflict.  The notification
      SHOULD indicate the nature and scope of the conflict, for example,
      the overlapping prefix range in a conflicting mitigation request.

   OP-009:  Network Address Translator Traversal: The DOTS protocol MUST
      operate over networks in which Network Address Translation (NAT)
      is deployed.  As UDP is the recommended transport for the DOTS
      signal channel, all considerations in "Middlebox Traversal
      Guidelines" in [RFC5405] apply to DOTS.  Regardless of transport,
      DOTS protocols MUST follow established best common practices
      (BCPs) for NAT traversal.

2.3.  Data Channel Requirements

   The data channel is intended to be used for bulk data exchanges
   between DOTS agents.  Unlike the signal channel, which must operate
   nominally even when confronted with signal degradation due to packet
   loss, the data channel is not expected to be constructed to deal with
   attack conditions.  As the primary function of the data channel is
   data exchange, a reliable transport is required in order for DOTS
   agents to detect data delivery success or failure.

   The data channel must be extensible.  We anticipate the data channel
   will be used for such purposes as configuration or resource
   discovery.  For example, a DOTS client may submit to the DOTS server
   a collection of prefixes it wants to refer to by alias when
   requesting mitigation, to which the server would respond with a
   success status and the new prefix group alias, or an error status and
   message in the event the DOTS client's data channel request failed.
   The transactional nature of such data exchanges suggests a separate
   set of requirements for the data channel, while the potentially




Mortensen, et al.      Expires September 11, 2017              [Page 10]

Internet-Draft              DOTS Requirements                 March 2017


   sensitive content sent between DOTS agents requires extra precautions
   to ensure data privacy and authenticity.

   DATA-001  Reliable transport: Messages sent over the data channel
      MUST be delivered reliably, in order sent.

   DATA-002  Data privacy and integrity: Transmissions over the data
      channel are likely to contain operationally or privacy-sensitive
      information or instructions from the remote DOTS agent.  Theft or
      modification of data channel transmissions could lead to
      information leaks or malicious transactions on behalf of the
      sending agent (see Section 4 below).  Consequently data sent over
      the data channel MUST be encrypted and authenticated using current
      industry best practices.  DOTS servers MUST enable means to
      prevent leaking operationally or privacy-sensitive data.  Although
      administrative entities participating in DOTS may detail what data
      may be revealed to third-party DOTS agents, such considerations
      are not in scope for this document.

   DATA-003  Resource Configuration: To help meet the general and
      operational requirements in this document, DOTS server
      implementations MUST provide an interface to configure resource
      identifiers, as described in OP-007.  DOTS server implementations
      MAY expose additional configurability.  Additional configurability
      is implementation-specific.

   DATA-004  Black- and whitelist management: DOTS servers SHOULD
      provide methods for DOTS clients to manage black- and white-lists
      of traffic destined for resources belonging to a client.

      For example, a DOTS client should be able to create a black- or
      whitelist entry; retrieve a list of current entries from either
      list; update the content of either list; and delete entries as
      necessary.

      How the DOTS server determines client ownership of address space
      is not in scope.

2.4.  Security requirements

   DOTS must operate within a particularly strict security context, as
   an insufficiently protected signal or data channel may be subject to
   abuse, enabling or supplementing the very attacks DOTS purports to
   mitigate.

   SEC-001  Peer Mutual Authentication: DOTS agents MUST authenticate
      each other before a DOTS session is considered valid.  The method
      of authentication is not specified, but should follow current



Mortensen, et al.      Expires September 11, 2017              [Page 11]

Internet-Draft              DOTS Requirements                 March 2017


      industry best practices with respect to any cryptographic
      mechanisms to authenticate the remote peer.

   SEC-002  Message Confidentiality, Integrity and Authenticity: DOTS
      protocols MUST take steps to protect the confidentiality,
      integrity and authenticity of messages sent between client and
      server.  While specific transport- and message-level security
      options are not specified, the protocols MUST follow current
      industry best practices for encryption and message authentication.

      In order for DOTS protocols to remain secure despite advancements
      in cryptanalysis and traffic analysis, DOTS agents MUST be able to
      negotiate the terms and mechanisms of protocol security, subject
      to the interoperability and signal message size requirements
      above.

      While the interfaces between downstream DOTS server and upstream
      DOTS client within a DOTS gateway are implementation-specific,
      those interfaces nevertheless MUST provide security equivalent to
      that of the signaling sessions bridged by gateways in the
      signaling path.  For example, when a DOTS gateway consisting of a
      DOTS server and DOTS client is running on the same logical device,
      they must be within the same process security boundary.

   SEC-003  Message Replay Protection: In order to prevent a passive
      attacker from capturing and replaying old messages, DOTS protocols
      MUST provide a method for replay detection.

2.5.  Data Model Requirements

   The value of DOTS is in standardizing a mechanism to permit elements,
   networks or domains under or under threat of DDoS attack to request
   aid mitigating the effects of any such attack.  A well-structured
   DOTS data model is therefore critical to the development of a
   successful DOTS protocol.

   DM-001:  Structure: The data model structure for the DOTS protocol
      may be described by a single module, or be divided into related
      collections of hierarchical modules and sub-modules.  If the data
      model structure is split across modules, those distinct modules
      MUST allow references to describe the overall data model's
      structural dependencies.

   DM-002:  Versioning: To ensure interoperability between DOTS protocol
      implementations, data models MUST be versioned.  The version
      number of the initial data model SHALL be 1.  Each published
      change to the initial published DOTS data model SHALL increment
      the data model version by 1.



Mortensen, et al.      Expires September 11, 2017              [Page 12]

Internet-Draft              DOTS Requirements                 March 2017


      How the protocol represents data model versions is not defined in
      this document.

   DM-003:  Mitigation Status Representation: The data model MUST
      provide the ability to represent a request for mitigation and the
      withdrawal of such a request.  The data model MUST also support a
      representation of currently requested mitigation status, including
      failures and their causes.

   DM-004:  Mitigation Scope Representation: The data model MUST support
      representation of a requested mitigation's scope.  As mitigation
      scope may be represented in several different ways, per OP-006
      above, the data model MUST be capable of flexible representation
      of mitigation scope.

   DM-005:  Mitigation Lifetime Representation: The data model MUST
      support representation of a mitigation request's lifetime,
      including mitigations with no specified end time.

   DM-006:  Mitigation Efficacy Representation: The data model MUST
      support representation of a DOTS client's understanding of the
      efficacy of a mitigation enabled through a mitigation request.

   DM-007:  Acceptable Signal Loss Representation: The data model MUST
      be able to represent the DOTS agent's preference for acceptable
      signal loss when establishing a signaling session, as described in
      GEN-002.

   DM-008:  Heartbeat Interval Representation: The data model MUST be
      able to represent the DOTS agent's preferred heartbeat interval,
      which the client may include when establishing the signal channel,
      as described in OP-002.

   DM-009:  Relationship to Transport: The DOTS data model MUST NOT
      depend on the specifics of any transport to represent fields in
      the model.

3.  Congestion Control Considerations

3.1.  Signal Channel

   As part of a protocol expected to operate over links affected by DDoS
   attack traffic, the DOTS signal channel MUST NOT contribute
   significantly to link congestion.  To meet the operational
   requirements above, DOTS signal channel implementations MUST support
   UDP.  However, UDP when deployed naively can be a source of network
   congestion, as discussed in [RFC5405].  Signal channel
   implementations using UDP MUST therefore include a congestion control



Mortensen, et al.      Expires September 11, 2017              [Page 13]

Internet-Draft              DOTS Requirements                 March 2017


   mechanism.  The form of that congestion control is implementation-
   specific.

   Signal channel implementations using TCP may rely on built-in TCP
   congestion control support.

3.2.  Data Channel

   As specified in DATA-001, the data channel requires reliable, in-
   order message delivery.  Data channel implementations using TCP may
   rely on the TCP implementation's built-in congestion control
   mechanisms.

4.  Security Considerations

   DOTS is at risk from three primary attacks:

   o  DOTS agent impersonation

   o  Traffic injection

   o  Signaling blocking

   The DOTS protocol MUST be designed for minimal data transfer to
   address the blocking risk.  Impersonation and traffic injection
   mitigation can be managed through current secure communications best
   practices.  See Section 2.4 above for a detailed discussion.

5.  Contributors

   Med Boucadair
      Orange

      mohamed.boucadair@orange.com

   Flemming Andreasen:
      Cisco Systems, Inc.

      fandreas@cisco.com

6.  Acknowledgments

   Thanks to Roman Danyliw and Matt Richardson for careful reading and
   feedback.







Mortensen, et al.      Expires September 11, 2017              [Page 14]

Internet-Draft              DOTS Requirements                 March 2017


7.  Change Log

7.1.  03 revision

   2016-10-30

   o  Extended SEC-003 to require secure interfaces within DOTS
      gateways.

   o  Changed DATA-003 to Resource Configuration, delegating control of
      acceptable signal loss, heartbeat intervals, and mitigation
      lifetime to DOTS client.

   o  Added data model requirements reflecting client control over the
      above.

7.2.  02 revision

7.3.  01 revision

   2016-03-21

   o  Reconciled terminology with -00 revision of
      [I-D.ietf-dots-use-cases].

   o  Terminology clarification based on working group feedback.

   o  Moved security-related requirements to separate section.

   o  Made resilience/robustness primary general requirement to align
      with charter.

   o  Clarified support for unidirectional communication within the
      bidirectional signal channel.

   o  Added proposed operational requirement to support session
      redirection.

   o  Added proposed operational requirement to support conflict
      notification.

   o  Added proposed operational requirement to support mitigation
      lifetime in mitigation requests.

   o  Added proposed operational requirement to support mitigation
      efficacy reporting from DOTS clients.





Mortensen, et al.      Expires September 11, 2017              [Page 15]

Internet-Draft              DOTS Requirements                 March 2017


   o  Added proposed operational requirement to cache lookups of all
      kinds.

   o  Added proposed operational requirement regarding NAT traversal.

   o  Removed redundant mutual authentication requirement from data
      channel requirements.

7.4.  00 revision

   2015-10-15

7.5.  Initial revision

   2015-09-24 Andrew Mortensen

8.  References

8.1.  Normative References

   [RFC0768]  Postel, J., "User Datagram Protocol", STD 6, RFC 768, DOI
              10.17487/RFC0768, August 1980,
              <http://www.rfc-editor.org/info/rfc768>.

   [RFC0791]  Postel, J., "Internet Protocol", STD 5, RFC 791, DOI
              10.17487/RFC0791, September 1981,
              <http://www.rfc-editor.org/info/rfc791>.

   [RFC0793]  Postel, J., "Transmission Control Protocol", STD 7, RFC
              793, DOI 10.17487/RFC0793, September 1981,
              <http://www.rfc-editor.org/info/rfc793>.

   [RFC1122]  Braden, R., Ed., "Requirements for Internet Hosts -
              Communication Layers", STD 3, RFC 1122, DOI 10.17487/
              RFC1122, October 1989,
              <http://www.rfc-editor.org/info/rfc1122>.

   [RFC1191]  Mogul, J. and S. Deering, "Path MTU discovery", RFC 1191,
              DOI 10.17487/RFC1191, November 1990,
              <http://www.rfc-editor.org/info/rfc1191>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, DOI 10.17487/
              RFC2119, March 1997,
              <http://www.rfc-editor.org/info/rfc2119>.






Mortensen, et al.      Expires September 11, 2017              [Page 16]

Internet-Draft              DOTS Requirements                 March 2017


   [RFC4821]  Mathis, M. and J. Heffner, "Packetization Layer Path MTU
              Discovery", RFC 4821, DOI 10.17487/RFC4821, March 2007,
              <http://www.rfc-editor.org/info/rfc4821>.

   [RFC5405]  Eggert, L. and G. Fairhurst, "Unicast UDP Usage Guidelines
              for Application Designers", BCP 145, RFC 5405, DOI
              10.17487/RFC5405, November 2008,
              <http://www.rfc-editor.org/info/rfc5405>.

8.2.  Informative References

   [I-D.ietf-dots-architecture]
              Mortensen, A., Andreasen, F., Reddy, T.,
              christopher_gray3@cable.comcast.com, c., Compton, R., and
              N. Teague, "Distributed-Denial-of-Service Open Threat
              Signaling (DOTS) Architecture", draft-ietf-dots-
              architecture-01 (work in progress), October 2016.

   [I-D.ietf-dots-use-cases]
              Dobbins, R., Fouant, S., Migault, D., Moskowitz, R.,
              Teague, N., Xia, L., and K. Nishizuka, "Use cases for DDoS
              Open Threat Signaling", draft-ietf-dots-use-cases-03 (work
              in progress), November 2016.

   [RFC1034]  Mockapetris, P., "Domain names - concepts and facilities",
              STD 13, RFC 1034, DOI 10.17487/RFC1034, November 1987,
              <http://www.rfc-editor.org/info/rfc1034>.

   [RFC1518]  Rekhter, Y. and T. Li, "An Architecture for IP Address
              Allocation with CIDR", RFC 1518, DOI 10.17487/RFC1518,
              September 1993, <http://www.rfc-editor.org/info/rfc1518>.

   [RFC1519]  Fuller, V., Li, T., Yu, J., and K. Varadhan, "Classless
              Inter-Domain Routing (CIDR): an Address Assignment and
              Aggregation Strategy", RFC 1519, DOI 10.17487/RFC1519,
              September 1993, <http://www.rfc-editor.org/info/rfc1519>.

   [RFC2373]  Hinden, R. and S. Deering, "IP Version 6 Addressing
              Architecture", RFC 2373, DOI 10.17487/RFC2373, July 1998,
              <http://www.rfc-editor.org/info/rfc2373>.

   [RFC2460]  Deering, S. and R. Hinden, "Internet Protocol, Version 6
              (IPv6) Specification", RFC 2460, DOI 10.17487/RFC2460,
              December 1998, <http://www.rfc-editor.org/info/rfc2460>.







Mortensen, et al.      Expires September 11, 2017              [Page 17]

Internet-Draft              DOTS Requirements                 March 2017


   [RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,
              A., Peterson, J., Sparks, R., Handley, M., and E.
              Schooler, "SIP: Session Initiation Protocol", RFC 3261,
              DOI 10.17487/RFC3261, June 2002,
              <http://www.rfc-editor.org/info/rfc3261>.

   [RFC4271]  Rekhter, Y., Ed., Li, T., Ed., and S. Hares, Ed., "A
              Border Gateway Protocol 4 (BGP-4)", RFC 4271, DOI
              10.17487/RFC4271, January 2006,
              <http://www.rfc-editor.org/info/rfc4271>.

   [RFC4732]  Handley, M., Ed., Rescorla, E., Ed., and IAB, "Internet
              Denial-of-Service Considerations", RFC 4732, DOI 10.17487/
              RFC4732, December 2006,
              <http://www.rfc-editor.org/info/rfc4732>.

Authors' Addresses

   Andrew Mortensen
   Arbor Networks, Inc.
   2727 S. State St
   Ann Arbor, MI  48104
   United States

   Email: amortensen@arbor.net


   Robert Moskowitz
   HTT Consulting
   Oak Park, MI  42837
   United States

   Email: rgm@htt-consult.com


   Tirumaleswar Reddy
   Cisco Systems, Inc.
   Cessna Business Park, Varthur Hobli
   Sarjapur Marathalli Outer Ring Road
   Bangalore, Karnataka  560103
   India

   Email: tireddy@cisco.com








Mortensen, et al.      Expires September 11, 2017              [Page 18]
